{"version":3,"sources":["Api/user.js","Api/conversation.js","Api/message.js","Api/index.js","Components/Input/index.jsx","Components/Button/index.jsx","Redux/slices/auth.js","Redux/slices/conversation.js","Redux/slices/index.js","Components/Conversation/index.jsx","Components/SearchResultItem/index.jsx","Components/SearchResult/index.jsx","Components/Sidebar/index.jsx","Components/Welcome/index.jsx","Components/Message/index.jsx","Components/ProfileModal/index.jsx","socket.js","Util/index.js","Containers/AppScreen/index.jsx","Hooks/useDebounce.js","Constants/index.js","Containers/LoginScreen/index.jsx","App.jsx","reportWebVitals.js","Redux/index.js","index.js","Theme/index.js"],"names":["userApi","body","axiosClient","post","q","url","get","conversationApi","senderId","messageApi","conversationId","queryString","require","axios","create","baseURL","headers","paramsSerializer","params","stringify","interceptors","response","use","data","error","Input","children","id","value","placeholder","type","onFocus","onBlur","onChange","Container","htmlFor","className","styled","div","Button","title","onClick","login","createAsyncThunk","a","rejectWithValue","res","userInfo","toast","register","status","auth","createSlice","name","initialState","isLoading","reducers","logout","state","extraReducers","builder","addCase","fulfilled","action","payload","success","pending","authSelector","actions","conversation","conversations","setConversations","rootReducer","combineReducers","authReducer","conversationReducer","Conversation","username","newestMessage","SearchResultItem","onclick","_id","email","SearchResult","searchResult","isSearching","onCreateConversation","length","map","user","Sidebar","isShowSearchResult","keySearch","onShowSearchResult","onHiddenSearchResult","onToggleShowProfile","onChangeKeySearch","onClickConversation","useSelector","members","find","Welcome","Message","isMe","message","p","ProfileModal","onClose","onLogout","socket","io","sleep","ms","Promise","resolve","setTimeout","validateEmail","test","String","toLowerCase","AppScreen","useState","firstTimeAccess","setFirstTimeAccess","setIsShowSearchResult","setSearchResult","isShowProfile","setIsShowProfile","setKeySearch","currentChatInfo","setCurrentChatInfo","messages","setMessages","messageContent","setMessageContent","receivedMessage","setReceivedMessage","setListUserOnline","listMessagesRef","useRef","isScrollTop","setIsScrollTop","isHaveNewMessage","setIsHaveNewMessage","setIsSearching","dispatch","useDispatch","fetchConversations","console","log","fetchMessages","useEffect","emit","userId","on","sender","text","friendId","concatMessages","current","scrollTop","scrollHeight","toggleIsScrollTop","event","target","offsetHeight","addEventListener","removeEventListener","callback","delay","deps","_callback","useCallback","timerId","clearTimeout","useDebounce","trim","then","users","filter","catch","err","finally","handleHiddenSearchResult","handleToggleShowProfile","handleSendMessage","_messageContent","receiver","receiverId","member","ref","index","onKeyUp","keyCode","LoginScreen","password","registerValue","setRegisterValue","loginValue","setLoginValue","info","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","theme","colors","main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","thunk","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"8PAEaA,EAAU,SACbC,GAEF,OAAOC,EAAYC,KADP,kBACiBF,IAHxBD,EAAU,SAKVC,GAEL,OAAOC,EAAYC,KADP,qBACiBF,IAPxBD,EAAU,SASZI,GACH,IAAMC,EAAM,gBAAkBD,EAC9B,OAAQF,EAAYI,IAAID,ICXnBE,EAAkB,SACLN,GAElB,OAAOC,EAAYC,KADP,qBACiBF,IAHxBM,EAAkB,SAKAC,GACvB,IAAMH,EAAM,gCAAkCG,EAC9C,OAAON,EAAYI,IAAID,ICPlBI,EAAa,SACMC,GACxB,IAAML,EAAM,iBAAmBK,EAC/B,OAAOR,EAAYI,IAAID,IAHlBI,EAAa,SAKVR,GAER,OAAOC,EAAYC,KADP,gBACiBF,ICR/BU,EAAcC,EAAQ,IAMtBV,EAAcW,IAAMC,OAAO,CAC7BC,QAAS,oCAETC,QAAS,CACL,eAAgB,mBAChB,mBAAoB,kBAGxBC,iBAAkB,SAACC,GAAD,OAAYP,EAAYQ,UAAUD,MAGxDhB,EAAYkB,aAAaC,SAASC,KAC9B,SAACD,GACG,OAAIA,GAAYA,EAASE,KACdF,KAKf,SAACG,GACG,MAAMA,KAICtB,I,wBAAAA,I,OC5BFuB,EAAQ,SAAC,GASf,IAAD,IARFC,gBAQE,MARS,KAQT,MAPFC,UAOE,MAPG,GAOH,MANFC,aAME,MANM,GAMN,MALFC,mBAKE,MALY,GAKZ,MAJFC,YAIE,MAJK,OAIL,MAHFC,eAGE,MAHQ,aAGR,MAFFC,cAEE,MAFO,aAEP,MADFC,gBACE,MADS,aACT,EACF,OACI,eAACC,EAAD,WACI,uBAAOC,QAASR,EAAIS,UAAU,aAA9B,SACKV,IAEL,uBACIE,MAAOA,EACPE,KAAMA,EACNH,GAAIA,EACJS,UAAU,QACVP,YAAaA,EACbI,SAAUA,EACVF,QAASA,EACTC,OAAQA,QAMlBE,EAAYG,IAAOC,IAAV,8fC9BFC,EAAS,SAAC,GAGhB,IAAD,IAFFC,aAEE,MAFM,GAEN,MADFC,eACE,MADQ,aACR,EACF,OACI,cAAC,EAAD,UACI,wBAAQL,UAAU,SAASK,QAASA,EAApC,SAA8CD,OAKpDN,EAAYG,IAAOC,IAAV,sW,eCTFI,EAAQC,2BAAiB,aAAD,uCAAe,WAAO1C,EAAP,oBAAA2C,EAAA,6DAAeC,EAAf,EAAeA,gBAAf,kBAE1B7C,EAAcC,GAFY,cAEtC6C,EAFsC,yBAIrCA,EAAIvB,KAAKwB,SAAS,IAJmB,uCAM5CC,IAAMxB,MAAM,+CANgC,kBAOrCqB,EAAgB,KAAIxB,SAASE,OAPQ,yDAAf,yDAWxB0B,EAAWN,2BAAiB,gBAAD,uCAAkB,WAAO1C,EAAP,oBAAA2C,EAAA,6DAAeC,EAAf,EAAeA,gBAAf,kBAEhC7C,EAAiBC,GAFe,cAE5C6C,EAF4C,yBAI3CA,EAAIvB,KAAKwB,SAAS,IAJyB,uCAMtB,MAAxB,KAAI1B,SAAS6B,QACbF,IAAMxB,MAAM,6DAPkC,kBAS3CqB,EAAgB,KAAIxB,SAASE,OATc,yDAAlB,yDAkBlC4B,EAAOC,sBAAY,CACrBC,KAAM,OACNC,aAPiB,CACjBP,SAAU,KACVQ,WAAW,GAMXC,SAAU,CACNC,OAAQ,SAACC,GACLA,EAAMX,SAAW,KACjBW,EAAMH,WAAY,IAG1BI,cAAe,SAACC,GACZA,EAAQC,QAAQnB,EAAMoB,WAAW,SAACJ,EAAOK,GACrCL,EAAMX,SAAWgB,EAAOC,QACxBN,EAAMH,WAAY,EAClBP,IAAMiB,QAAQ,gDAElBL,EAAQC,QAAQnB,EAAMwB,SAAS,SAACR,GAC5BA,EAAMH,WAAY,KAGtBK,EAAQC,QAAQZ,EAASa,WAAW,SAACJ,EAAOK,GACxCL,EAAMX,SAAWgB,EAAOC,QACxBN,EAAMH,WAAY,EAClBP,IAAMiB,QAAQ,4CAElBL,EAAQC,QAAQZ,EAASiB,SAAS,SAACR,GAC/BA,EAAMH,WAAY,QAKjBY,EAAe,SAAAT,GAAK,OAAIA,EAAMP,MAGvCM,EACAN,EAAKiB,QADLX,OAGWN,IAAf,QC/DMkB,GAAejB,EANGxC,EAAQ,IAAxBwC,aAMyB,CAC7BC,KAAM,eACNC,aANiB,CACjBgB,cAAe,IAMfd,SAAU,CACNe,iBADM,SACWb,EAAOK,GACpBL,EAAMY,cAAgBP,EAAOC,YAW1BK,IAFXA,EAAaD,QADbG,iBAGWF,EAAf,SCTeG,GALKC,YAAgB,CAChCtB,KAAMuB,EACNL,aAAcM,KCRLC,GAAe,SAAC,GAItB,IAAD,IAHFC,gBAGE,MAHS,GAGT,MAFFC,qBAEE,MAFc,sDAEd,MADFrC,eACE,MADQ,aACR,EACF,OACI,eAAC,GAAD,CAAWA,QAASA,EAApB,UACI,mBAAGL,UAAU,WAAb,SACKyC,IAEL,mBAAGzC,UAAU,gBAAb,SACK0C,QAMX5C,GAAYG,IAAOC,IAAV,+bCjBFyC,GAAmB,SAAC,GAG1B,IAAD,IAFFxD,YAEE,MAFK,GAEL,MADFyD,eACE,MADQ,aACR,EACF,OACI,eAAC,GAAD,CAAWvC,QAASuC,EAApB,UACI,qBAAK5C,UAAU,WAAf,SAA2Bb,EAAKsD,WAChC,oBAAGzC,UAAU,SAAb,iBAA2Bb,EAAK0D,OAChC,oBAAG7C,UAAU,SAAb,oBAA8Bb,EAAK2D,aAKzChD,GAAYG,IAAOC,IAAV,6OCZF6C,GAAe,SAAC,GAItB,IAAD,IAHFC,oBAGE,MAHa,GAGb,MAFFC,mBAEE,aADFC,4BACE,MADqB,aACrB,EACF,OACI,cAAC,GAAD,UACKF,EAAaG,OAASH,EAAaI,KAAI,SAAAC,GAEpC,OACI,cAAC,GAAD,CAAiClE,KAAMkE,EAAMT,QAFjC,kBAAMM,EAAqBG,EAAKR,OAErBQ,EAAKR,QAE/BI,EACD,6CAEA,kDAMVnD,GAAYG,IAAOC,IAAV,sGChBFoD,GAAU,SAAC,GAYjB,IAAD,IAXFC,0BAWE,aAVFC,iBAUE,MAVU,GAUV,MATFR,oBASE,MATa,GASb,EARFE,EAQE,EARFA,qBAQE,IAPFhB,qBAOE,MAPc,GAOd,EANFe,EAME,EANFA,YAME,IALFQ,0BAKE,MALmB,aAKnB,MAJFC,4BAIE,MAJqB,aAIrB,MAHFC,2BAGE,MAHoB,aAGpB,MAFFC,yBAEE,MAFkB,aAElB,MADFC,2BACE,MADoB,aACpB,EACIlD,EAAWmD,YAAY/B,GAAcpB,SAC3C,OACI,eAAC,GAAD,WACI,sBAAKX,UAAU,aAAf,UACI,qBAAKA,UAAU,WAAWK,QAASsD,EAAnC,SACI,0BAAU1C,KAAK,oBAEnB,sBAAKjB,UAAU,YAAf,UACI,cAAC,EAAD,CACIP,YAAY,eACZE,QAAS8D,EACT7D,OAAQ8D,EACRlE,MAAOgE,EACP3D,SAAU+D,EALd,SAOI,0BAAU3C,KAAK,qBAElBsC,EACG,qBAAKvD,UAAU,eAAf,SACI,cAAC,GAAD,CAAciD,YAAaA,EAAaD,aAAcA,EAAcE,qBAAsBA,MAE9F,mCAIZ,qBAAKlD,UAAU,cAAf,SACKkC,EAAckB,KAAI,SAAAnB,GACf,IAAMQ,EAAWR,EAAa8B,QAAQC,MAAK,SAAAX,GAAI,OAAIA,EAAKR,MAAQlC,EAASkC,OAAKJ,SAE9E,OACI,cAAC,GAAD,CAEIA,SAAUA,EACVC,cAAc,iBACdrC,QANQ,kBAAMwD,EAAoB5B,KAG7BA,EAAaY,cAYxC/C,GAAYG,IAAOC,IAAV,81CC9DF+D,GAAU,SAAC,GAGjB,IAAD,IAFFxB,gBAEE,MAFS,GAET,MADFlD,UACE,MADG,GACH,EACF,OACI,cAAC,GAAD,UACI,sBAAKS,UAAU,UAAf,UACI,mBAAGA,UAAU,iBAAb,sBACA,mBAAGA,UAAU,WAAb,SAAyByC,IACzB,oBAAGzC,UAAU,WAAb,yCAAwCT,KACxC,mBAAGS,UAAU,WAAb,2EAMVF,GAAYG,IAAOC,IAAV,oSChBFgE,GAAU,SAAC,GAIjB,IAAD,IAHFC,YAGE,aAFF1B,gBAEE,MAFS,GAET,MADF2B,eACE,MADQ,GACR,EACF,OACI,cAAC,GAAD,CAAWD,KAAMA,EAAjB,SACKA,EACG,mCACI,qBAAKnE,UAAU,UAAf,SACKoE,MAIT,qCACI,qBAAKpE,UAAU,WAAf,SACKyC,IAEL,qBAAKzC,UAAU,UAAf,SACKoE,UAQnBtE,GAAYG,IAAOC,IAAV,4UAEQ,SAAAmE,GAAC,OAAIA,EAAEF,KAAO,WAAa,gBCzBrCG,GAAe,SAAC,GAGtB,IAAD,IAFFC,eAEE,MAFQ,aAER,MADFC,gBACE,MADS,aACT,EACI7D,EAAWmD,YAAY/B,GAAcpB,SAG3C,OACI,eAAC,GAAD,WACI,qBAAKX,UAAU,YACf,sBAAKA,UAAU,cAAf,UACI,oBAAGA,UAAU,WAAb,uBAAmCW,EAAS8B,YAC5C,oBAAGzC,UAAU,KAAb,iBAAuBW,EAASkC,OAChC,qBAAK7C,UAAU,WAAf,SACI,cAAC,EAAD,CAAQI,MAAM,KAAKC,QAASkE,MAEhC,qBAAKvE,UAAU,eAAf,SACI,cAAC,EAAD,CAAQI,MAAM,SAASC,QAASmE,aAO9C1E,GAAYG,IAAOC,IAAV,44B,SC5BFuE,GAASC,cAAG,yCCFZC,GAAQ,SAACC,GAClB,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAGzCI,GAAgB,SAAClC,GAE1B,MADW,wJACDmC,KAAKC,OAAOpC,GAAOqC,gBCOpBC,GAAY,WAAO,IAAD,EACmBC,oBAAS,GAD5B,mBACpBC,EADoB,KACHC,EADG,OAEyBF,oBAAS,GAFlC,mBAEpB9B,EAFoB,KAEAiC,EAFA,OAGaH,mBAAS,IAHtB,mBAGpBrC,EAHoB,KAGNyC,EAHM,OAIeJ,oBAAS,GAJxB,mBAIpBK,EAJoB,KAILC,EAJK,OAKON,mBAAS,IALhB,mBAKpB7B,EALoB,KAKToC,EALS,OAMeP,mBAAS,IANxB,mBAMpBnD,EANoB,KAMLC,EANK,OAOmBkD,mBAAS,MAP5B,mBAOpBQ,EAPoB,KAOHC,EAPG,OAQKT,mBAAS,IARd,mBAQpBU,EARoB,KAQVC,EARU,OASiBX,mBAAS,IAT1B,mBASpBY,EAToB,KASJC,EATI,OAUmBb,mBAAS,MAV5B,mBAUpBc,EAVoB,KAUHC,EAVG,QAWiBf,mBAAS,IAX1B,qBAWJgB,IAXI,aAYrBC,GAAkBC,iBAAO,MAZJ,GAaWlB,oBAAS,GAbpB,qBAapBmB,GAboB,MAaPC,GAbO,SAcqBpB,oBAAS,GAd9B,qBAcpBqB,GAdoB,MAcFC,GAdE,SAeWtB,oBAAS,GAfpB,qBAepBpC,GAfoB,MAeP2D,GAfO,MAmBrBC,GAAWC,cACXnG,GAAWmD,YAAY/B,GAAcpB,SAIrCoG,GAAkB,uCAAG,4BAAAvG,EAAA,+EAEDrC,EAA2CwC,GAASkC,KAFnD,OAEbnC,EAFa,OAGnByB,EAAiBzB,EAAIvB,KAAK+C,eAHP,gDAKnB8E,QAAQC,IAAR,MALmB,yDAAH,qDASlBC,GAAa,uCAAG,4BAAA1G,EAAA,mEAEVqF,EAFU,gCAGQxH,EAAuCwH,EAAgBhD,KAH/D,OAGJnC,EAHI,OAIVsF,EAAYtF,EAAIvB,KAAK4G,UAJX,uDAOdiB,QAAQC,IAAR,MAPc,yDAAH,qDA4CnBE,qBAAU,WACNJ,KAjCAtC,GAAO2C,KAAK,WAAY,CACpBC,OAAQ1G,GAASkC,MAKrB4B,GAAO6C,GAAG,qBAAqB,SAAAnI,GAC3BiH,EAAmB,CACfmB,OAAQpI,EAAKoI,OACbC,KAAMrI,EAAKqI,OAEfb,IAAoB,MAYxBlC,GAAO6C,GAAG,oBAAoB,SAAAnI,GAC1BkH,GAAkBlH,QAcvB,IAEHgI,qBAAU,WACFT,KACAK,KACAJ,IAAoB,MAGzB,CAACD,KAEJS,qBAAU,WACND,OAED,CAACrB,IAEJsB,qBAAU,WACFhB,GAAmBN,GAvCJ,WACnB,IAAM4B,EAAW5B,EAAgB9B,QAAQC,MAAK,SAAAX,GAAI,OAAIA,EAAKR,MAAQlC,GAASkC,OAAKA,IAC7EsD,EAAgBoB,OAAO1E,MAAQ4E,GAC/BzB,EAAY,GAAD,mBAAKD,GAAL,CAAeI,KAqC1BuB,KAGL,CAACvB,IAEJgB,qBAAU,WACFb,GAAgBqB,UAAYnB,KAC5BF,GAAgBqB,QAAQC,UAAYtB,GAAgBqB,QAAQE,gBAGjE,CAAC9B,IAEJoB,qBAAU,WACN,IAAMW,EAAoB,SAACC,GAEnBA,EAAMC,OAAOJ,WAAaG,EAAMC,OAAOH,aAAeE,EAAMC,OAAOC,aAAe,GAClFxB,IAAe,GAEfA,IAAe,IAOvB,OAJIH,GAAgBqB,SAChBrB,GAAgBqB,QAAQO,iBAAiB,SAAUJ,GAGhD,WACCxB,GAAgBqB,SAEhBrB,GAAgBqB,QAAQQ,oBAAoB,SAAUL,MAI/D,CAACxB,GAAgBqB,UC/IG,SAACS,EAAUC,EAAOC,GAEzC,IAAMC,EAAYC,sBAAYJ,EAAUE,GAExCnB,qBAAU,WACN,IAAMsB,EAAU1D,YAAW,WACvBwD,MACDF,GAEH,OAAO,WACHK,aAAaD,MAElB,CAACF,EAAWF,IDyIfM,EAAY,WACJnF,EAAUoF,SACVhC,IAAe,GACfhJ,EAAe4F,GACVqF,MAAK,SAAAnI,GACFsG,QAAQC,IAAIvG,EAAIvB,MAChB,IAAM2J,EAAQpI,EAAIvB,KAAK2J,MAAMC,QAAO,SAAA1F,GAAI,OAAIA,EAAKR,MAAQlC,GAASkC,OAClE4C,EAAgBqD,MAEnBE,OAAM,SAAAC,GACHjC,QAAQC,IAAIgC,GACZxD,EAAgB,OAEnByD,SAAQ,WACLtC,IAAe,SAG5B,IAAK,CAACpD,IAMT,IAIM2F,GAAwB,uCAAG,sBAAA3I,EAAA,sEACvBmE,GAAM,KADiB,OAE7Ba,GAAsB,GAFO,2CAAH,qDAKxB4D,GAA0B,WAC5BzD,GAAkBD,IAmChB2D,GAAiB,uCAAG,gCAAA7I,EAAA,mEAEdyF,EAAe2C,OAFD,wBAGRU,EAAkBrD,EACxBC,EAAkB,IACZrI,EAAO,CACTS,eAAgBuH,EAAgBhD,IAChCzE,SAAUuC,GAASkC,IACnB2E,KAAMvB,GARI,SAUR5H,EAAuBR,GAVf,OAWR0L,EAAW1D,EAAgB9B,QAAQC,MAAK,SAAAX,GAAI,OAAIA,EAAKR,MAAQlC,GAASkC,OAC5E4B,GAAO2C,KAAK,oBAAqB,CAC7BG,OAAQ5G,GACR4I,WACA/B,KAAM8B,IAEVtD,EAAY,GAAD,mBAAKD,GAAL,CAAe,CACtBwB,OAAQ,CACJ1E,IAAKlC,GAASkC,KAElB2E,KAAM8B,MArBI,0DAyBlBtC,QAAQC,IAAR,MAzBkB,0DAAH,qDAsCvB,OACI,eAAC,GAAD,WACKvB,GAAiB,cAAC,GAAD,CAAcnB,QAAS6E,GAAyB5E,SAxErD,WACjBqC,GAASxF,QAwEL,qBAAKrB,UAAU,UAAf,SACI,cAAC,GAAD,CACIyD,mBAxFe,WAC3B+B,GAAsB,IAwFV9B,qBAAsByF,GACtB5F,mBAAoBA,EACpBI,oBAAqByF,GACrB5F,UAAWA,EACXI,kBA5Ec,SAACmE,GAC3BnC,EAAamC,EAAMC,OAAOxI,QA4EdwD,aAAcA,EACdE,qBA1EiB,SAACsG,GAC9BrL,EAAsC,CAClCC,SAAUuC,GAASkC,IACnB2G,eAEHX,MAAK,SAAAnI,GAEEA,EAAIvB,KAAK8C,eACT8E,KACAjB,EAAmBpF,EAAIvB,KAAK8C,aAAa,IACzCsD,GAAmB,QAiEfrD,cAAeA,EACf2B,oBA7DgB,SAAC5B,GAC7BsD,GAAmB,GACnBO,EAAmB7D,IA4DPgB,YAAaA,OAGrB,qBAAKjD,UAAU,OAAf,SACKsF,EACG,cAAC,GAAD,CAAS7C,SAAU9B,GAAS8B,SAAUlD,GAAIoB,GAASkC,MAEnD,qCACI,qBAAK7C,UAAU,SAAf,SACK6F,EAAgB9B,QAAQC,MAAK,SAAAyF,GAAM,OAAIA,EAAO5G,MAAQlC,GAASkC,OAAKJ,WAEzE,qBAAKzC,UAAU,cAAc0J,IAAKpD,GAAlC,SACKP,EAAS3C,KAAI,SAACgB,EAASuF,GAEpB,IAAMxF,EAAOxD,GAASkC,MAAQuB,EAAQmD,OAAO1E,IAC7C,OACI,cAAC,GAAD,CAEIsB,KAAMA,EACN1B,SAAU2B,EAAQmD,OAAO9E,SACzB2B,QAASA,EAAQoD,MAHZpD,EAAQvB,KAAO8G,QAQpC,sBAAK3J,UAAU,eAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAON,KAAK,OAAOF,MAAOyG,EAAgBpG,SApFnC,SAACkI,GAChC7B,EAAkB6B,EAAMC,OAAOxI,QAmFyEoK,QAnDxF,SAAC7B,GExPA,KFyPbA,EAAM8B,SACNR,UAmDgB,qBAAKrJ,UAAU,MAAf,SACI,wBAAQA,UAAU,UAAUK,QAASgJ,GAArC,SACI,0BAAUpI,KAAK,iCAW7CnB,GAAYG,IAAOC,IAAV,2/D,SGjTF4J,GAAc,WACvB,IAAMjD,EAAWC,cADY,EAEazB,mBAAS,CAC/CvC,MAAO,GACPL,SAAU,GACVsH,SAAU,KALe,mBAEtBC,EAFsB,KAEPC,EAFO,OAQO5E,mBAAS,CACzCvC,MAAO,GACPiH,SAAU,KAVe,mBAQtBG,EARsB,KAQVC,EARU,KA+F7B,OACI,eAAC,GAAD,WACI,sBAAKnK,UAAU,OAAf,UACI,oBAAIA,UAAU,UAAd,kCACA,sBAAKA,UAAU,aAAf,UACI,cAAC,EAAD,CACIT,GAAG,gBACHC,MAAOwK,EAAclH,MACrBrD,YAAY,yCACZI,SA3Fc,SAACkI,GAC/BkC,EAAiB,6BACVD,GADS,IAEZlH,MAAOiF,EAAMC,OAAOxI,UAoFZ,SAMI,0BAAUyB,KAAK,mBAEnB,cAAC,EAAD,CACI1B,GAAG,mBACHC,MAAOwK,EAAcvH,SACrBhD,YAAY,qBACZI,SA5FiB,SAACkI,GAClCkC,EAAiB,6BACVD,GADS,IAEZvH,SAAUsF,EAAMC,OAAOxI,UAqFf,SAMI,0BAAUyB,KAAK,qBAEnB,cAAC,EAAD,CACI1B,GAAG,mBACHC,MAAOwK,EAAcD,SACrBtK,YAAY,qBACZI,SA5FiB,SAACkI,GAClCkC,EAAiB,6BACVD,GADS,IAEZD,SAAUhC,EAAMC,OAAOxI,UA0FXE,KAAK,WALT,SAOI,0BAAUuB,KAAK,6BAGvB,cAAC,EAAD,CAAQb,MAAM,uBAAUC,QAtCb,WAzBE,IAACb,MA0BDwK,GAzBXvH,UAAYjD,EAAMuK,UAAY/E,GAAcxF,EAAMsD,QAAUtD,EAAMuK,SAASnB,QAAUpJ,EAAMiD,SAASmG,SAGzG5D,GAAcxF,EAAMsD,OAIpBtD,EAAMuK,UAAavK,EAAMuK,SAASnB,OAIlCpJ,EAAMiD,UAAajD,EAAMiD,SAASmG,YAAvC,GACIhI,IAAMxB,MAAM,0CACL,IALPwB,IAAMxB,MAAM,0CACL,IALPwB,IAAMxB,MAAM,oCACL,OAqBPyH,EAAShG,EAASmJ,IAClBpJ,IAAMwJ,KAAK,wBAqCX,sBAAKpK,UAAU,OAAf,UACI,oBAAIA,UAAU,UAAd,sCACA,sBAAKA,UAAU,aAAf,UACI,cAAC,EAAD,CACIT,GAAG,aACHC,MAAO0K,EAAWpH,MAClBrD,YAAY,yCACZI,SAnGW,SAACkI,GAC5BoC,EAAc,CACVrH,MAAOiF,EAAMC,OAAOxI,SA6FZ,SAMI,0BAAUyB,KAAK,mBAEnB,cAAC,EAAD,CACI1B,GAAG,gBACHC,MAAO0K,EAAWH,SAClBtK,YAAY,qBACZI,SArGc,SAACkI,GAC/BoC,EAAc,6BACPD,GADM,IAETH,SAAUhC,EAAMC,OAAOxI,UAmGXE,KAAK,WALT,SAOI,0BAAUuB,KAAK,6BAGvB,cAAC,EAAD,CAAQb,MAAM,2BAAYC,QApElB,WAhCE,IAACb,MAiCD0K,GAhCRH,UAAY/E,GAAcxF,EAAMsD,QAAUtD,EAAMuK,SAASnB,SAG9D5D,GAAcxF,EAAMsD,OAIpBtD,EAAMuK,UAAavK,EAAMuK,SAASnB,YAAvC,GACIhI,IAAMxB,MAAM,0CACL,IALPwB,IAAMxB,MAAM,oCACL,OA4BPyH,EAASvG,EAAM4J,IACftJ,IAAMwJ,KAAK,4BAuEjBtK,GAAYG,IAAOC,IAAV,2cC5JFmK,GAAM,WACf,IAAM1J,EAAWmD,YAAY/B,GAAcpB,SAC3C,OACI,eAAC,GAAD,CAAWX,UAAU,MAArB,UACMW,EAGE,cAAC,GAAD,IAFA,cAAC,GAAD,IAKJ,cAAC,IAAD,CACI2J,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,WAAS,QAMnB9K,GAAYG,IAAOC,IAAV,gFAES,SAAAmE,GAAC,OAAIA,EAAEwG,MAAMC,OAAOC,QCrB7BC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,+CCARO,GAAgB,CAClBC,IAAK,OACLC,aACAC,UAAW,CAAC,SAGVC,GAAmBC,aAAeL,GAAepJ,IAEjD0J,GAAQC,yBAAe,CACzBC,QAASJ,GACTK,WAAY,CAACC,QAGJC,GAAYC,aAAaN,IAEvBA,MCXfO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAaU,QAAS,KAAML,UAAWA,GAAvC,SACE,cAAC,IAAD,CAAetB,MCfF,CACjBC,OAAQ,CACJC,KAAM,YDaN,SACE,cAAC,GAAD,YAKR0B,SAASC,eAAe,SAM1B1B,M","file":"static/js/main.cc4c27c1.chunk.js","sourcesContent":["import axiosClient from \".\";\r\n\r\nexport const userApi = {\r\n    login(body) {\r\n        const url = \"/api/auth/login\";\r\n        return axiosClient.post(url, body);\r\n    },\r\n    register(body) {\r\n        const url = \"/api/auth/register\";\r\n        return axiosClient.post(url, body);\r\n    },\r\n    search(q) {\r\n        const url = \"/api/users?q=\" + q;\r\n        return  axiosClient.get(url);\r\n    }\r\n};","import axiosClient from \".\";\r\n\r\nexport const conversationApi = {\r\n    createNewConversation(body) {\r\n        const url = \"/api/conversations\";\r\n        return axiosClient.post(url, body);\r\n    },\r\n    getConversationsBySenderId(senderId) {\r\n        const url = \"/api/conversations/?senderId=\" + senderId;\r\n        return axiosClient.get(url);\r\n    }\r\n};","import axiosClient from \".\";\r\n\r\nexport const messageApi = {\r\n    getMessagesByConversationId(conversationId) {\r\n        const url = \"/api/messages/\" + conversationId;\r\n        return axiosClient.get(url);\r\n    },\r\n    sendMessage(body) {\r\n        const url = \"/api/messages\";\r\n        return axiosClient.post(url, body);\r\n    }\r\n};","import axios from \"axios\";\r\nconst queryString = require(\"query-string\");\r\n\r\nexport * from \"./user\";\r\nexport * from \"./conversation\";\r\nexport * from \"./message\";\r\n\r\nconst axiosClient = axios.create({\r\n    baseURL: \"https://chatting-be.herokuapp.com\",\r\n\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"X-Requested-With\": \"XMLHttpRequest\",\r\n    },\r\n\r\n    paramsSerializer: (params) => queryString.stringify(params),\r\n});\r\n\r\naxiosClient.interceptors.response.use(\r\n    (response) => {\r\n        if (response && response.data) {\r\n            return response;\r\n        }\r\n        return response;\r\n    },\r\n\r\n    (error) => {\r\n        throw error;\r\n    }\r\n);\r\n\r\nexport default axiosClient;","// import { Children } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Input = ({\r\n    children = null,\r\n    id = \"\",\r\n    value = \"\",\r\n    placeholder = \"\",\r\n    type = \"text\",\r\n    onFocus = () => {},\r\n    onBlur = () => {},\r\n    onChange = () => {},\r\n}) => {\r\n    return (\r\n        <Container>\r\n            <label htmlFor={id} className=\"inputLabel\">\r\n                {children}\r\n            </label>\r\n            <input \r\n                value={value} \r\n                type={type} \r\n                id={id} \r\n                className=\"input\" \r\n                placeholder={placeholder} \r\n                onChange={onChange}\r\n                onFocus={onFocus}\r\n                onBlur={onBlur}\r\n            />\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    margin-top: 10px;\r\n\r\n    .inputLabel {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 5px;\r\n        transform: translateY(-50%);\r\n    }\r\n\r\n    .input {\r\n        background-color: transparent;\r\n        color: #fff;\r\n        border: 1px solid #fff;\r\n        outline: none;\r\n        padding: 10px 10px 10px 25px;\r\n\r\n        &::placeholder {\r\n            color: #ffffffbc;\r\n        }\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Button = ({\r\n    title = \"\",\r\n    onClick = () => {}\r\n}) => {\r\n    return (\r\n        <Container>\r\n            <button className=\"button\" onClick={onClick}>{title}</button>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    margin-top: 10px;\r\n    width: 100%;\r\n\r\n    .button {\r\n        background-color: #341647;\r\n        color: #fff;\r\n        border: 1px solid #fff;\r\n        width: 100%;\r\n        padding: 10px 0;\r\n        cursor: pointer;\r\n        transition: 300ms;\r\n\r\n        &:hover {\r\n            background-color: #ee7b0f;\r\n        }\r\n    }\r\n`;","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport { toast } from \"react-toastify\";\r\nimport { userApi } from \"../../Api\";\r\n\r\nexport const login = createAsyncThunk('auth/login', async (body, { rejectWithValue }) => {\r\n    try {\r\n        const res = await userApi.login(body);\r\n        // console.log(res.data);\r\n        return res.data.userInfo[0];\r\n    } catch (err) {\r\n        toast.error(\"Đăng nhập thất bại\");\r\n        return rejectWithValue(err.response.data);\r\n    }\r\n});\r\n\r\nexport const register = createAsyncThunk('auth/register', async (body, { rejectWithValue }) => {\r\n    try {\r\n        const res = await userApi.register(body);\r\n        // console.log(res);\r\n        return res.data.userInfo[0];\r\n    } catch (err) {\r\n        if (err.response.status === 409) {\r\n            toast.error(\"Email đã được đăng ký\");\r\n        }\r\n        return rejectWithValue(err.response.data);\r\n    }\r\n});\r\n\r\nconst initialState = {\r\n    userInfo: null,\r\n    isLoading: false\r\n};\r\n\r\nconst auth = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n        logout: (state) => {\r\n            state.userInfo = null;\r\n            state.isLoading = false;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(login.fulfilled, (state, action) => {\r\n            state.userInfo = action.payload;\r\n            state.isLoading = false;\r\n            toast.success(\"Đăng nhập thành công\");\r\n        });\r\n        builder.addCase(login.pending, (state) => {\r\n            state.isLoading = true;\r\n        });\r\n\r\n        builder.addCase(register.fulfilled, (state, action) => {\r\n            state.userInfo = action.payload;\r\n            state.isLoading = false;\r\n            toast.success(\"Đăng ký thành công\");\r\n        });\r\n        builder.addCase(register.pending, (state) => {\r\n            state.isLoading = true;\r\n        });\r\n    }\r\n});\r\n\r\nexport const authSelector = state => state.auth;\r\n\r\nexport const {\r\n    logout\r\n} = auth.actions;\r\n\r\nexport default auth.reducer;","const { createSlice } = require(\"@reduxjs/toolkit\");\r\n\r\nconst initialState = {\r\n    conversations: []\r\n}\r\n\r\nconst conversation = createSlice({\r\n    name: \"conversation\",\r\n    initialState,\r\n    reducers: {\r\n        setConversations(state, action) {\r\n            state.conversations = action.payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const conversationSelector = state => state.conversation;\r\n\r\nexport const {\r\n    setConversations\r\n} = conversation.actions;\r\n\r\nexport default conversation.reducer;","\r\nimport { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport authReducer from \"./auth\";\r\nimport conversationReducer from \"./conversation\";\r\n\r\nexport * from \"./auth\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    conversation: conversationReducer\r\n});\r\n\r\nexport default rootReducer;","import styled from \"styled-components\";\r\n\r\nexport const Conversation = ({\r\n    username = \"\",\r\n    newestMessage = \"Bắt đầu cuộc trò chuyện\",\r\n    onClick = () => {}\r\n}) => {\r\n    return (\r\n        <Container onClick={onClick}>\r\n            <p className=\"username\">\r\n                {username}\r\n            </p>\r\n            <p className=\"newestMessage\">\r\n                {newestMessage}\r\n            </p>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    padding: 0 10px;\r\n    border-bottom: 1px solid #ccc;\r\n    cursor: pointer;\r\n\r\n    .username {\r\n        padding-top: 10px;\r\n        padding-bottom: 5px;\r\n        font-weight: 700;\r\n        font-size: 20px;\r\n    }\r\n\r\n    .newestMessage {\r\n        max-width: 150px;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        padding-bottom: 10px;\r\n        color: #ccc;\r\n        white-space: nowrap;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const SearchResultItem = ({\r\n    data = {},\r\n    onclick = () => {}\r\n}) => {\r\n    return (\r\n        <Container onClick={onclick}>\r\n            <div className=\"username\">{data.username}</div>\r\n            <p className=\"userId\">ID: {data._id}</p>\r\n            <p className=\"userId\">Email: {data.email}</p>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    padding: 10px;\r\n    border-bottom: 1px solid #3f3d3d;\r\n    cursor: pointer;\r\n\r\n    .username {\r\n        padding: 5px 0;\r\n        font-weight: 700;\r\n    }\r\n\r\n    .userId {\r\n        font-size: 13px;\r\n    }\r\n`;","import styled from \"styled-components\";\r\nimport { SearchResultItem } from \"../SearchResultItem\";\r\n\r\nexport const SearchResult = ({\r\n    searchResult = [],\r\n    isSearching = false,\r\n    onCreateConversation = () => {}\r\n}) => {\r\n    return (\r\n        <Container>\r\n            {searchResult.length ? searchResult.map(user => {\r\n                const onclick = () => onCreateConversation(user._id);\r\n                return (\r\n                    <SearchResultItem key={user._id} data={user} onclick={onclick} />\r\n                );\r\n            }) : isSearching ? (\r\n                <p>searching...</p>\r\n            ) : (\r\n                <p>User not found</p>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    background-color: #242020;\r\n    width: 100%;\r\n    min-height: 400px;\r\n`;","import { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { authSelector } from \"../../Redux/slices\";\r\nimport { Conversation } from \"../Conversation\";\r\nimport { Input } from \"../Input\";\r\nimport { SearchResult } from \"../SearchResult\";\r\n\r\nexport const Sidebar = ({\r\n    isShowSearchResult = false,\r\n    keySearch = \"\",\r\n    searchResult = [],\r\n    onCreateConversation,\r\n    conversations = [],\r\n    isSearching,\r\n    onShowSearchResult = () => {},\r\n    onHiddenSearchResult = () => {},\r\n    onToggleShowProfile = () => {},\r\n    onChangeKeySearch = () => {},\r\n    onClickConversation = () => {}\r\n}) => {\r\n    const userInfo = useSelector(authSelector).userInfo;\r\n    return (\r\n        <Container>\r\n            <div className=\"searchUser\">\r\n                <div className=\"userInfo\" onClick={onToggleShowProfile}>\r\n                    <ion-icon name=\"person-circle\"></ion-icon>\r\n                </div>\r\n                <div className=\"searchBox\">\r\n                    <Input\r\n                        placeholder=\"Nhập id\"\r\n                        onFocus={onShowSearchResult}\r\n                        onBlur={onHiddenSearchResult}\r\n                        value={keySearch}\r\n                        onChange={onChangeKeySearch}\r\n                    >\r\n                        <ion-icon name=\"search-outline\"></ion-icon>\r\n                    </Input>\r\n                    {isShowSearchResult ? (\r\n                        <div className=\"searchResult\">\r\n                            <SearchResult isSearching={isSearching} searchResult={searchResult} onCreateConversation={onCreateConversation} />\r\n                        </div>\r\n                    ) : <></>}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"listFriends\">\r\n                {conversations.map(conversation => {\r\n                    const username = conversation.members.find(user => user._id !== userInfo._id).username;\r\n                    const onClick = () => onClickConversation(conversation);\r\n                    return (\r\n                        <Conversation \r\n                            key={conversation._id}\r\n                            username={username}\r\n                            newestMessage=\"newest message\"\r\n                            onClick={onClick}\r\n                        />\r\n                    );\r\n                })}\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    min-height: 100vh;\r\n    background-color: #201f22;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .searchUser {\r\n        border-bottom: 1px solid #ccc;\r\n        height: 80px;\r\n        padding: 10px;\r\n        position: relative;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        .userInfo {\r\n            cursor: pointer;\r\n\r\n            ion-icon {\r\n                font-size: 30px;\r\n            }\r\n        }\r\n\r\n        .searchBox {\r\n            flex: 1;\r\n            margin-left: 10px;\r\n\r\n            div {\r\n                margin-top: 0;\r\n            }\r\n\r\n            .searchResult {\r\n                position: absolute;\r\n                top: 100%;\r\n                left: 0;\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n\r\n    .listFriends {\r\n        overflow-y: scroll;\r\n        height: calc(100vh - 80px);\r\n\r\n        /* width */\r\n        &::-webkit-scrollbar {\r\n            width: 5px;\r\n        }\r\n        \r\n        /* Track */\r\n        &::-webkit-scrollbar-track {\r\n            background: #ccc; \r\n        }\r\n        \r\n        /* Handle */\r\n        &::-webkit-scrollbar-thumb {\r\n            background: #888; \r\n        }\r\n        \r\n        /* Handle on hover */\r\n        &::-webkit-scrollbar-thumb:hover {\r\n            background: #555; \r\n        }\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Welcome = ({\r\n    username = \"\",\r\n    id = \"\"\r\n}) => {\r\n    return (\r\n        <Container>\r\n            <div className=\"content\">\r\n                <p className=\"welcomeHeading\">Welcome!</p>\r\n                <p className=\"username\">{username}</p>\r\n                <p className=\"username\">ID của bạn là: {id}</p>\r\n                <p className=\"username\">Chia sẻ ID của bạn cho bạn bè :v</p>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n\r\n    .welcomeHeading {\r\n        margin-top: 100px;\r\n        font-size: 50px;\r\n    }\r\n\r\n    .username {\r\n        font-size: 25px;\r\n        font-weight: 700;\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Message = ({\r\n    isMe = false,\r\n    username = \"\",\r\n    message = \"\"\r\n}) => {\r\n    return (\r\n        <Container isMe={isMe}>\r\n            {isMe ? (\r\n                <>\r\n                    <div className=\"message\">\r\n                        {message}\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <div className=\"username\">\r\n                        {username}\r\n                    </div>\r\n                    <div className=\"message\">\r\n                        {message}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: ${p => p.isMe ? \"flex-end\" : \"flex-start\"};\r\n    margin: 20px 0;\r\n\r\n    .message {\r\n        max-width: 400px;\r\n        background-color: #4e4a4a;\r\n        padding: 10px;\r\n        border-radius: 8px;\r\n        color: #fff;\r\n        margin: 0 5px;\r\n    }\r\n\r\n    .username {\r\n        padding: 5px;\r\n    }\r\n`;  ","import { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { authSelector } from \"../../Redux/slices/auth\";\r\nimport { Button } from \"../Button\";\r\n\r\nexport const ProfileModal = ({\r\n    onClose = () => {},\r\n    onLogout = () => {}\r\n}) => {\r\n    const userInfo = useSelector(authSelector).userInfo;\r\n    // console.log(userInfo);\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"overlay\"></div>\r\n            <div className=\"profileMain\">\r\n                <p className=\"username\">Username: {userInfo.username}</p>\r\n                <p className=\"id\">ID: {userInfo._id}</p>\r\n                <div className=\"buttonOK\">\r\n                    <Button title=\"OK\" onClick={onClose} />\r\n                </div>\r\n                <div className=\"buttonLogout\">\r\n                    <Button title=\"Logout\" onClick={onLogout} />\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .overlay {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: rgba(0, 0, 0, .3);;\r\n    }\r\n\r\n    .profileMain {\r\n        z-index: 1;\r\n        background-color: #381c38;\r\n        width: 400px;\r\n        height: 300px;\r\n        display: flex;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        padding-top: 50px;\r\n        border-radius: 15px;\r\n\r\n        .username {\r\n            font-size: 23px;\r\n            padding-bottom: 10px;\r\n        }\r\n\r\n        .buttonOK {\r\n            padding-top: 60px;\r\n            width: 200px;\r\n        }\r\n\r\n        .buttonLogout {\r\n            width: 200px;\r\n        }\r\n    }\r\n`;","import { io } from \"socket.io-client\";\r\n\r\nexport const socket = io(\"https://chatting-socket.herokuapp.com\");","export const sleep = (ms) => {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport const validateEmail = (email) => {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}","import { useEffect, useRef } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { conversationApi, messageApi, userApi } from \"../../Api\";\r\n\r\nimport { Message, ProfileModal, Sidebar, Welcome } from \"../../Components\";\r\nimport { ENTER_KEY } from \"../../Constants\";\r\nimport { useDebounce } from \"../../Hooks\";\r\nimport { authSelector, logout } from \"../../Redux/slices/auth\";\r\nimport { socket } from \"../../socket\";\r\nimport { sleep } from \"../../Util\";\r\n\r\nexport const AppScreen = () => {\r\n    const [firstTimeAccess, setFirstTimeAccess] = useState(true);\r\n    const [isShowSearchResult, setIsShowSearchResult] = useState(false);\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [isShowProfile, setIsShowProfile] = useState(false);\r\n    const [keySearch, setKeySearch] = useState(\"\");\r\n    const [conversations, setConversations] = useState([]);\r\n    const [currentChatInfo, setCurrentChatInfo] = useState(null);\r\n    const [messages, setMessages] = useState([]);\r\n    const [messageContent, setMessageContent] = useState(\"\");\r\n    const [receivedMessage, setReceivedMessage] = useState(null);\r\n    const [listUserOnline, setListUserOnline] = useState([]);\r\n    const listMessagesRef = useRef(null);\r\n    const [isScrollTop, setIsScrollTop] = useState(false);\r\n    const [isHaveNewMessage, setIsHaveNewMessage] = useState(false);\r\n    const [isSearching, setIsSearching] = useState(false);\r\n\r\n    // console.log(messages);\r\n\r\n    const dispatch = useDispatch();\r\n    const userInfo = useSelector(authSelector).userInfo;\r\n\r\n\r\n    // effect functions\r\n    const fetchConversations = async () => {\r\n        try {\r\n            const res = await conversationApi.getConversationsBySenderId(userInfo._id);\r\n            setConversations(res.data.conversations);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n    \r\n    const fetchMessages = async () => {\r\n        try {\r\n            if (currentChatInfo) {\r\n                const res = await messageApi.getMessagesByConversationId(currentChatInfo._id);\r\n                setMessages(res.data.messages);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const registerSocket = () => {\r\n        socket.emit(\"register\", {\r\n            userId: userInfo._id\r\n        });\r\n    };\r\n\r\n    const receiveMessageFromServer = () => {\r\n        socket.on(\"serverSendMessage\", data => {\r\n            setReceivedMessage({\r\n                sender: data.sender,\r\n                text: data.text\r\n            });\r\n            setIsHaveNewMessage(true);\r\n        });\r\n    };\r\n\r\n    const concatMessages = () => {\r\n        const friendId = currentChatInfo.members.find(user => user._id !== userInfo._id)._id;\r\n        if (receivedMessage.sender._id === friendId) {\r\n            setMessages([...messages, receivedMessage]);\r\n        }\r\n    };\r\n\r\n    const updateUserOnline = () => {\r\n        socket.on(\"updateUserOnline\", data => {\r\n            setListUserOnline(data);\r\n        });\r\n    };\r\n    // effect functions\r\n\r\n    // console.log(receivedMessage);\r\n\r\n    // effect\r\n    useEffect(() => {\r\n        fetchConversations();\r\n        registerSocket();\r\n        receiveMessageFromServer();\r\n        updateUserOnline();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isHaveNewMessage) {\r\n            fetchConversations();\r\n            setIsHaveNewMessage(false);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [isHaveNewMessage]);\r\n\r\n    useEffect(() => {\r\n        fetchMessages();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentChatInfo]);\r\n\r\n    useEffect(() => {\r\n        if (receivedMessage && currentChatInfo) {\r\n            concatMessages();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [receivedMessage]);\r\n\r\n    useEffect(() => {\r\n        if (listMessagesRef.current && !isScrollTop) {\r\n            listMessagesRef.current.scrollTop = listMessagesRef.current.scrollHeight;\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [messages]);\r\n\r\n    useEffect(() => {\r\n        const toggleIsScrollTop = (event) => {\r\n            // console.log([event.target.scrollTop, event.target.scrollHeight - event.target.offsetHeight - 50]);\r\n            if (event.target.scrollTop >= event.target.scrollHeight - event.target.offsetHeight - 50) {\r\n                setIsScrollTop(false);\r\n            } else {\r\n                setIsScrollTop(true);\r\n            }\r\n        };\r\n        if (listMessagesRef.current) {\r\n            listMessagesRef.current.addEventListener(\"scroll\", toggleIsScrollTop);\r\n        }\r\n\r\n        return () => {\r\n            if (listMessagesRef.current) {\r\n                // eslint-disable-next-line react-hooks/exhaustive-deps\r\n                listMessagesRef.current.removeEventListener(\"scroll\", toggleIsScrollTop);\r\n            }\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [listMessagesRef.current]);\r\n    // effect\r\n\r\n\r\n    \r\n    // debounce\r\n    useDebounce(() => {\r\n        if (keySearch.trim()) {\r\n            setIsSearching(true);\r\n            userApi.search(keySearch)\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    const users = res.data.users.filter(user => user._id !== userInfo._id);\r\n                    setSearchResult(users);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    setSearchResult([]);\r\n                })\r\n                .finally(() => {\r\n                    setIsSearching(false);\r\n                });\r\n        }\r\n    }, 800, [keySearch]);\r\n    //debounce\r\n\r\n\r\n\r\n    // handle functions\r\n    const handleShowSearchResult = () => {\r\n        setIsShowSearchResult(true);\r\n    };\r\n    \r\n    const handleHiddenSearchResult = async () => {\r\n        await sleep(200);\r\n        setIsShowSearchResult(false);\r\n    };\r\n\r\n    const handleToggleShowProfile = () => {\r\n        setIsShowProfile(!isShowProfile);\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        dispatch(logout());\r\n    };\r\n\r\n    const handleChangeKeySearch = (event) => {\r\n        setKeySearch(event.target.value);\r\n    };\r\n\r\n    const handleCreateConversation = (receiverId) => {\r\n        conversationApi.createNewConversation({\r\n            senderId: userInfo._id,\r\n            receiverId\r\n        })\r\n        .then(res => {\r\n            // console.log(res.data.conversation);\r\n            if (res.data.conversation) {\r\n                fetchConversations();\r\n                setCurrentChatInfo(res.data.conversation[0]);\r\n                setFirstTimeAccess(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleClickConversation = (conversation) => {\r\n        setFirstTimeAccess(false);\r\n        setCurrentChatInfo(conversation);\r\n    };\r\n\r\n    const handleChangeMessageContent = (event) => {\r\n        setMessageContent(event.target.value);\r\n    };\r\n\r\n    const handleSendMessage = async () => {\r\n        try {\r\n            if (messageContent.trim()) {\r\n                const _messageContent = messageContent;\r\n                setMessageContent(\"\");\r\n                const body = {\r\n                    conversationId: currentChatInfo._id,\r\n                    senderId: userInfo._id,\r\n                    text: messageContent\r\n                }\r\n                await messageApi.sendMessage(body);\r\n                const receiver = currentChatInfo.members.find(user => user._id !== userInfo._id);\r\n                socket.emit(\"clientSendMessage\", {\r\n                    sender: userInfo,\r\n                    receiver,\r\n                    text: _messageContent\r\n                });\r\n                setMessages([...messages, {\r\n                    sender: {\r\n                        _id: userInfo._id\r\n                    },\r\n                    text: _messageContent\r\n                }]);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    };\r\n\r\n    const handleKeyUp = (event) => {\r\n        if (event.keyCode === ENTER_KEY) {\r\n            handleSendMessage();\r\n        }\r\n    };\r\n    // handle functions\r\n\r\n    // console.log(listUserOnline);\r\n\r\n    return (\r\n        <Container>\r\n            {isShowProfile && <ProfileModal onClose={handleToggleShowProfile} onLogout={handleLogout} />}\r\n            <div className=\"sidebar\">\r\n                <Sidebar \r\n                    onShowSearchResult={handleShowSearchResult}\r\n                    onHiddenSearchResult={handleHiddenSearchResult}\r\n                    isShowSearchResult={isShowSearchResult}\r\n                    onToggleShowProfile={handleToggleShowProfile}\r\n                    keySearch={keySearch}\r\n                    onChangeKeySearch={handleChangeKeySearch}\r\n                    searchResult={searchResult}\r\n                    onCreateConversation={handleCreateConversation}\r\n                    conversations={conversations}\r\n                    onClickConversation={handleClickConversation}\r\n                    isSearching={isSearching}\r\n                />\r\n            </div>\r\n            <div className=\"main\">\r\n                {firstTimeAccess ? (\r\n                    <Welcome username={userInfo.username} id={userInfo._id} />\r\n                ) : (\r\n                    <>\r\n                        <div className=\"header\">\r\n                            {currentChatInfo.members.find(member => member._id !== userInfo._id).username}\r\n                        </div>\r\n                        <div className=\"listMessage\" ref={listMessagesRef}>\r\n                            {messages.map((message, index) => {\r\n                                // console.log(message);\r\n                                const isMe = userInfo._id === message.sender._id;\r\n                                return (\r\n                                    <Message\r\n                                        key={message._id || index}\r\n                                        isMe={isMe}\r\n                                        username={message.sender.username}\r\n                                        message={message.text}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                        <div className=\"inputMessage\">\r\n                            <div className=\"input\">\r\n                                <input type=\"text\" value={messageContent} onChange={handleChangeMessageContent} onKeyUp={handleKeyUp} />\r\n                            </div>\r\n                            <div className=\"btn\">\r\n                                <button className=\"sendBtn\" onClick={handleSendMessage}>\r\n                                    <ion-icon name=\"send-outline\"></ion-icon>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    min-height: 100vh;\r\n\r\n    .sidebar {\r\n        flex: 1;\r\n    }\r\n\r\n    .main {\r\n        flex: 4;\r\n        height: 100vh;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .header {\r\n            padding: 20px;\r\n            border-bottom: 1px solid #000;\r\n            box-shadow: 0 0 5px #000;\r\n        }\r\n\r\n        .listMessage {\r\n            flex: 1;\r\n            overflow-y: scroll;\r\n            padding-right: 10px;\r\n\r\n            /* width */\r\n            &::-webkit-scrollbar {\r\n                width: 5px;\r\n            }\r\n            \r\n            /* Track */\r\n            &::-webkit-scrollbar-track {\r\n                background: #ccc; \r\n            }\r\n            \r\n            /* Handle */\r\n            &::-webkit-scrollbar-thumb {\r\n                background: #888; \r\n            }\r\n            \r\n            /* Handle on hover */\r\n            &::-webkit-scrollbar-thumb:hover {\r\n                background: #555; \r\n            }\r\n        }\r\n\r\n        .inputMessage {\r\n            display: flex;\r\n            background-color: #3b383d;\r\n            border-top: 1px solid #ccc;\r\n\r\n            .input {\r\n                flex: 1;\r\n\r\n                input {\r\n                    background-color: transparent;\r\n                    width: 100%;\r\n                    border: none;\r\n                    outline: none;\r\n                    padding: 20px;\r\n                    color: #fff;\r\n                    font-size: 18px;\r\n                }\r\n            }\r\n\r\n            .btn {\r\n                width: 80px;\r\n\r\n                button {\r\n                    width: 100%;\r\n                    height: 100%;\r\n                    cursor: pointer;\r\n                    background-color: transparent;\r\n                    border: none;\r\n                    border-left: 1px solid #ccc;\r\n\r\n                    ion-icon {\r\n                        font-size: 25px;\r\n                        color: #fff;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;","import { useCallback, useEffect } from \"react\";\r\n\r\nexport const useDebounce = (callback, delay, deps) => {\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const _callback = useCallback(callback, deps)\r\n\r\n    useEffect(() => {\r\n        const timerId = setTimeout(() => {\r\n            _callback()\r\n        }, delay);\r\n\r\n        return () => {\r\n            clearTimeout(timerId)\r\n        }\r\n    }, [_callback, delay])\r\n}","export const ENTER_KEY = 13;","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Button, Input } from \"../../Components\";\r\nimport { login, register } from \"../../Redux/slices/auth\";\r\nimport { validateEmail } from \"../../Util\";\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [registerValue, setRegisterValue] = useState({\r\n        email: \"\",\r\n        username: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const [loginValue, setLoginValue] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const handleChangeEmailRegister = (event) => {\r\n        setRegisterValue({\r\n            ...registerValue,\r\n            email: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleChangeUsernameRegister = (event) => {\r\n        setRegisterValue({\r\n            ...registerValue,\r\n            username: event.target.value\r\n        });\r\n    };\r\n\r\n    \r\n    const handleChangePasswordRegister = (event) => {\r\n        setRegisterValue({\r\n            ...registerValue,\r\n            password: event.target.value\r\n        });\r\n    };\r\n\r\n    \r\n    const handleChangeEmailLogin = (event) => {\r\n        setLoginValue({\r\n            email: event.target.value\r\n        });\r\n    };\r\n\r\n    const handleChangePasswordLogin = (event) => {\r\n        setLoginValue({\r\n            ...loginValue,\r\n            password: event.target.value\r\n        });\r\n    };\r\n\r\n    const validateLogin = (value) => {\r\n        if (value.password && validateEmail(value.email) && value.password.trim()) {\r\n            return true;\r\n        }\r\n        if (!validateEmail(value.email))  {\r\n            toast.error(\"Email không hợp lệ!\");\r\n            return false;\r\n        }\r\n        if (!value.password || !value.password.trim()) {\r\n            toast.error(\"Bạn chưa nhập password!\");\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const validateRegister = (value) => {\r\n        if (value.username && value.password && validateEmail(value.email) && value.password.trim() && value.username.trim()) {\r\n            return true;\r\n        }\r\n        if (!validateEmail(value.email))  {\r\n            toast.error(\"Email không hợp lệ!\");\r\n            return false;\r\n        }\r\n        if (!value.password || !value.password.trim()) {\r\n            toast.error(\"Bạn chưa nhập password!\");\r\n            return false;\r\n        }\r\n        if (!value.username || !value.username.trim()) {\r\n            toast.error(\"Bạn chưa nhập username!\");\r\n            return false;\r\n        }\r\n    };\r\n    \r\n    const handleLogin = () => {\r\n        if (validateLogin(loginValue)) {\r\n            dispatch(login(loginValue));\r\n            toast.info(\"Processing...\");\r\n        }\r\n    };\r\n\r\n    const handleRegister = () => {\r\n        if (validateRegister(registerValue)) {\r\n            dispatch(register(registerValue));\r\n            toast.info(\"Processing...\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"form\">\r\n                <h2 className=\"heading\">Đăng ký</h2>\r\n                <div className=\"inputGroup\">\r\n                    <Input\r\n                        id=\"emailRegister\"\r\n                        value={registerValue.email}\r\n                        placeholder=\"Nhập địa chỉ email\"\r\n                        onChange={handleChangeEmailRegister}\r\n                    >\r\n                        <ion-icon name=\"mail-outline\"></ion-icon>\r\n                    </Input>\r\n                    <Input\r\n                        id=\"usernameRegister\"\r\n                        value={registerValue.username}\r\n                        placeholder=\"Nhập username\"\r\n                        onChange={handleChangeUsernameRegister}\r\n                    >\r\n                        <ion-icon name=\"person-outline\"></ion-icon>\r\n                    </Input>\r\n                    <Input\r\n                        id=\"passwordRegister\"\r\n                        value={registerValue.password}\r\n                        placeholder=\"Nhập password\"\r\n                        onChange={handleChangePasswordRegister}\r\n                        type=\"password\"\r\n                    >\r\n                        <ion-icon name=\"lock-closed-outline\"></ion-icon>\r\n                    </Input>\r\n                </div>\r\n                <Button title=\"Đăng ký\" onClick={handleRegister} />\r\n            </div>\r\n            <div className=\"form\">\r\n                <h2 className=\"heading\">Đăng nhập</h2>\r\n                <div className=\"inputGroup\">\r\n                    <Input\r\n                        id=\"emailLogin\"\r\n                        value={loginValue.email}\r\n                        placeholder=\"Nhập địa chỉ email\"\r\n                        onChange={handleChangeEmailLogin}\r\n                    >\r\n                        <ion-icon name=\"mail-outline\"></ion-icon>\r\n                    </Input>\r\n                    <Input\r\n                        id=\"passwordLogin\"\r\n                        value={loginValue.password}\r\n                        placeholder=\"Nhập password\"\r\n                        onChange={handleChangePasswordLogin}\r\n                        type=\"password\"\r\n                    >\r\n                        <ion-icon name=\"lock-closed-outline\"></ion-icon>\r\n                    </Input>\r\n                </div>\r\n                <Button title=\"Đăng nhập\" onClick={handleLogin} />\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    \r\n    .form {\r\n        border: 1px solid #fff;\r\n        padding: 20px 10px 30px 10px;\r\n        margin: 20px;\r\n        min-height: 300px;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .heading {\r\n            margin-bottom: 10px;\r\n        }\r\n\r\n        .inputGroup {\r\n            flex: 1;\r\n        }\r\n    }\r\n`;","import { useSelector } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport styled from \"styled-components\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { AppScreen, LoginScreen } from \"./Containers\";\r\nimport { authSelector } from \"./Redux/slices/auth\";\r\n\r\nexport const App = () => {\r\n    const userInfo = useSelector(authSelector).userInfo;\r\n    return (\r\n        <Container className=\"App\">\r\n            {!userInfo ? (\r\n                <LoginScreen />\r\n            ) : (\r\n                <AppScreen />\r\n            )}\r\n\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={2000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                draggable\r\n            />\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst Container = styled.div`\r\n    min-height: 100vh;\r\n    background-color: ${p => p.theme.colors.main};\r\n`;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './slices';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['auth']\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: [thunk]\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from './Theme';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store, { persistor } from './Redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\r\n    colors: {\r\n        main: \"#272a2e\",\r\n    }\r\n}"],"sourceRoot":""}